mutate(crime_rate = count / population) %>%
ggplot(aes(x=reorder(BORO_NM, -(crime_rate)), y=crime_rate, fill=LAW_CAT_CD)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Crime Rates by Borough and Level of Offense") + xlab("Borough Name")
# Distribution of annual salaries
income_annual %>%
ggplot(aes(x=salary)) +
geom_histogram() + ggtitle("Distribution of Annual Salaries")
# Distribution of annual salaries
income_annual %>%
ggplot(aes(x=salary)) +
geom_histogram() + ggtitle("Distribution of Annual Salaries")
library(tidyverse)
setwd("C:/Users/Student/OneDrive - University of Virginia/Desktop/SYS2202/Final/SYS2202-Final-repo")
# complaints dataset
complaints <- read_csv("NYPD_Complaint_Data_Current__Year_To_Date_.csv")
# income dataset
income <- read_csv("Citywide_Payroll_Data__Fiscal_Year_.csv")
# population dataset
population <- read_csv("New_York_City_Population_By_Neighborhood_Tabulation_Areas.csv")
# Cleaning borough variable
library(stringr)
income_annual <- income_annual %>%
mutate(BORO_NM = str_to_upper(boro)) %>%
filter(BORO_NM == 'BRONX' | BORO_NM == 'BROOKLYN' | BORO_NM == 'QUEENS' |
BORO_NM == 'MANHATTAN' | BORO_NM == 'RICHMOND') %>%
# Staten Island is also known as Richmond
mutate_at('BORO_NM', str_replace, 'RICHMOND', 'STATEN ISLAND')
# Distribution by borough
income_annual %>%
filter(salary > 0 && salary < quantile(salary,0.75) + 1.5*IQR(salary)) %>%
ggplot(aes(x=salary, color = BORO_NM)) +
geom_freqpoly() + ggtitle("Distribution of Annual Salaries \n by Borough")
install.packages("ggpubr")
install.packages("ggpubr")
knitr::opts_chunk$set(echo = TRUE)
ggplot(income_and_crime, aes(x=median_salary, y=complaint_count)) +
geom_point() +
geom_smooth(method = 'lm', formula = y~x)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("C:/Users/Student/OneDrive - University of Virginia/Desktop/SYS2202/Final/SYS2202-Final-repo")
# complaints dataset
complaints <- read_csv("NYPD_Complaint_Data_Current__Year_To_Date_.csv")
# income dataset
income <- read_csv("Citywide_Payroll_Data__Fiscal_Year_.csv")
# population dataset
population <- read_csv("New_York_City_Population_By_Neighborhood_Tabulation_Areas.csv")
complaints %>%
dplyr::select(LAW_CAT_CD, BORO_NM) %>%
glimpse()
income %>%
dplyr::select(`Work Location Borough`, `Base Salary`) %>%
glimpse()
complaints %>%
filter(is.na(BORO_NM)) %>%
count()
# only look at complaints from after 2015
complaints <- complaints %>%
filter(CMPLNT_FR_DT >= 1/1/2018) %>%
# remove observations without a borough
filter(!is.na(BORO_NM))
complaints %>%
group_by(BORO_NM) %>%
summarize(count = n()) %>%
ggplot(aes(x=reorder(BORO_NM, -(count)), y=count, fill=BORO_NM)) +
geom_bar(stat="identity") +
coord_flip() +
theme(legend.position = "none") +
ggtitle("Number of Crime Complaints by Borough") + xlab("Borough Name")
borough_populations = c(1472654, 2736074, 1694251, 2405464, 495747)
complaints %>%
group_by(BORO_NM) %>%
summarize(count = n()) %>%
add_column(population = borough_populations) %>%
mutate(crime_rate = count / population) %>%
ggplot(aes(x=reorder(BORO_NM, -(crime_rate)), y=crime_rate, fill=BORO_NM)) +
geom_bar(stat="identity") +
coord_flip() +
theme(legend.position = "none") +
ggtitle("Crime Rates by Borough") + xlab("Borough Name")
complaints %>%
filter(!is.na(LAW_CAT_CD)) %>%
group_by(LAW_CAT_CD) %>%
summarize(count = n()) %>%
ggplot(aes(x=reorder(LAW_CAT_CD, -(count)), y=count, fill=LAW_CAT_CD)) +
geom_bar(stat="identity") +
coord_flip() +
theme(legend.position = "none") +
ggtitle("Number of Crime Complaints by Type") + xlab("Type")
complaints %>%
group_by(BORO_NM, LAW_CAT_CD) %>%
summarize(count = n()) %>%
ggplot(aes(x=reorder(BORO_NM, -(count)), y=count, fill=LAW_CAT_CD)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Number of Crime Complaints by Borough \n and Level of Offense") +
xlab("Borough Name")
borough_populations = c(1472654, 1472654, 1472654, 2736074, 2736074, 2736074, 1694251, 1694251, 1694251, 2405464, 2405464, 2405464, 495747, 495747, 495747)
complaints %>%
group_by(BORO_NM, LAW_CAT_CD) %>%
summarize(count = n()) %>%
add_column(population = borough_populations) %>%
mutate(crime_rate = count / population) %>%
ggplot(aes(x=reorder(BORO_NM, -(crime_rate)), y=crime_rate, fill=LAW_CAT_CD)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Crime Rates by Borough and Level of Offense") + xlab("Borough Name")
complaints %>%
group_by(BORO_NM, LAW_CAT_CD) %>%
summarize(count = n()) %>%
ggplot(aes(x=reorder(BORO_NM, -(count)), y=count, fill=LAW_CAT_CD)) +
geom_bar(position = "fill", stat="identity") +
coord_flip() +
ggtitle("Number of Crime Complaints by Borough \n and Level of Offense") +
xlab("Borough Name") + ylab("Percent")
income_annual <- income %>%
# rename columns so they are easier to work with
rename(boro = `Work Location Borough`,
salary = `Base Salary`,
basis = `Pay Basis`) %>%
# we only want to look at individuals who are actively working, otherwise the   data will be skewed
filter(`Leave Status as of June 30` == "ACTIVE") %>%
filter(basis == 'per Annum') %>%
filter(`Fiscal Year` >= 2018)
head(income_annual)
# Distribution of annual salaries
income_annual %>%
ggplot(aes(x=salary)) +
geom_histogram() + ggtitle("Distribution of Annual Salaries")
# Summary of income data; to be used to determine outliers
summarize(income_annual, median(salary), mean(salary), IQR(salary), sd(salary))
summary(income_annual$salary)
# Determining outliers
income_annual %>%
filter(salary > quantile(salary,0.75) + 1.5*IQR(salary))
# Removing outliers
income_annual <- income_annual %>%
filter(salary < quantile(salary,0.75) + 1.5*IQR(salary))
income_annual %>%
ggplot(aes(x=salary)) +
geom_histogram() + ggtitle("Distribution of Annual Salaries")
# Cleaning borough variable
library(stringr)
income_annual <- income_annual %>%
mutate(BORO_NM = str_to_upper(boro)) %>%
filter(BORO_NM == 'BRONX' | BORO_NM == 'BROOKLYN' | BORO_NM == 'QUEENS' |
BORO_NM == 'MANHATTAN' | BORO_NM == 'RICHMOND') %>%
# Staten Island is also known as Richmond
mutate_at('BORO_NM', str_replace, 'RICHMOND', 'STATEN ISLAND')
# Distribution by borough
income_annual %>%
filter(salary > 0 && salary < quantile(salary,0.75) + 1.5*IQR(salary)) %>%
ggplot(aes(x=salary, color = BORO_NM)) +
geom_freqpoly() + ggtitle("Distribution of Annual Salaries \n by Borough")
income_by_boro <- income_annual %>%
group_by(BORO_NM) %>%
summarize(median_salary = median(salary))
income_by_boro
crime_by_boro <- complaints %>%
group_by(BORO_NM) %>%
summarize(count = n())
crime_counts_categories <- complaints %>%
group_by(BORO_NM, LAW_CAT_CD) %>%
summarize(count = n())
# income and crime
income_and_crime <- income_by_boro %>%
left_join(. , crime_by_boro, by = "BORO_NM") %>%
rename(complaint_count = count) %>%
arrange(desc(median_salary))
income_and_crime
library(ggpubr)
library("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
library(ggpubr)
ggplot(income_and_crime, aes(x=median_salary, y=complaint_count)) +
geom_point() +
geom_smooth(method = 'lm', formula = y~x)
#ggscatter(income_and, x = "mpg", y = "wt",
#         add = "reg.line", conf.int = TRUE,
#        cor.coef = TRUE, cor.method = "pearson",
#       xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
cor(income_and_crime$median_salary, income_and_crime$complaint_count)
cor.test(income_and_crime$median_salary, income_and_crime$complaint_count)
View(my_spdf1)
# income data by neighborhood to fill map:
district_income <- read_csv("district_income.csv")
View(district_income)
View(spdf_neighborhoods_new)
my_spdf1@data[["ntacode"]]
my_spdf1@data[["ntaname"]]
knitr::opts_chunk$set(echo = TRUE)
data <- read_csv("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS3060/Second Half/data.csv")
library(tidyverse)
data <- read_csv("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS3060/Second Half/data.csv")
library(tidyverse)
data <- read_csv("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS3060/Second Half/data.csv")
library(ggplot)
library(ggplot2)
library(ggplot2)
fit_w  <- fitdist(data$`Service Time`, "weibull")
install.packages("fitdistrplus")
library(fitdistrplus)
library(fitdistrplus)
fit_w  <- fitdist(data$`Service Time`, "weibull")
fit_g  <- fitdist(data$`Service Time`, "gamma")
fit_ln <- fitdist(data$`Service Time`, "lnorm")
summary(fit_ln)
par(mfrow=c(2,2))
plot.legend <- c("Weibull", "lognormal", "gamma")
denscomp(list(fit_w, fit_g, fit_ln), legendtext = plot.legend)
cdfcomp (list(fit_w, fit_g, fit_ln), legendtext = plot.legend)
qqcomp  (list(fit_w, fit_g, fit_ln), legendtext = plot.legend)
ppcomp  (list(fit_w, fit_g, fit_ln), legendtext = plot.legend)
library(fitdistrplus)
fit_w  <- fitdist(data$`Service Time`, "normal")
fit_w  <- fitdist(data$`Service Time`, "normal")
library(fitdistrplus)
fit_w  <- fitdist(data$`Service Time`, "weibull")
fit_g  <- fitdist(data$`Service Time`, "gamma")
fit_ln <- fitdist(data$`Service Time`, "lnorm")
summary(fit_ln)
library(fitdistrplus)
fit_n  <- fitdist(data$`Service Time`, "norm")
fit_g  <- fitdist(data$`Service Time`, "gamma")
fit_ln <- fitdist(data$`Service Time`, "lnorm")
summary(fit_ln)
par(mfrow=c(2,2))
plot.legend <- c("Normal", "lognormal", "gamma")
denscomp(list(fit_n, fit_g, fit_ln), legendtext = plot.legend)
cdfcomp (list(fit_n, fit_g, fit_ln), legendtext = plot.legend)
qqcomp  (list(fit_n, fit_g, fit_ln), legendtext = plot.legend)
ppcomp  (list(fit_n, fit_g, fit_ln), legendtext = plot.legend)
FIT <- fitdist(data$`Service Time`, "norm")    ## note: it is "norm" not "normal"
class(FIT)
# [1] "fitdist"
plot(FIT)
FIT <- fitdist(data$`Service Time`, "norm")    ## note: it is "norm" not "normal"
plot(FIT)
library(ggpubr)
shapiro.test(my_data$len)
library(ggpubr)
shapiro.test(data$`Service Time`)
fit_1  <- fitdist(data$`Time Between Arrivals`, "exp")
fit_1  <- fitdist(data$`Time Between Arrivals`, "norm")
data1 <- data %>%
filter(!is.na(`Time Between Arrivals`))
data1 <- data %>%
filter(!is.na(`Time Between Arrivals`))
fit_1  <- fitdist(data1$`Time Between Arrivals`, "norm")
fit_2  <- fitdist(data1$`Time Between Arrivals`, "gamma")
fit_2  <- fitdist(data1$`Time Between Arrivals`/10, "exp")
fit_3 <- fitdist(data1$`Time Between Arrivals`, "lnorm")
data1 <- data %>%
filter(!is.na(`Time Between Arrivals`))
fit_1  <- fitdist(data1$`Time Between Arrivals`, "norm")
fit_2  <- fitdist(data1$`Time Between Arrivals`/10, "exp")
#fit_3 <- fitdist(data1$`Time Between Arrivals`, "lnorm")
summary(fit_ln)
par(mfrow=c(2,2))
plot.legend <- c("Normal", "Exponential")
denscomp(list(fit_1, fit_2), legendtext = plot.legend)
FIT <- fitdist(data$`Service Time`, "exp")    ## note: it is "norm" not "normal"
plot(FIT)
FIT <- fitdist(data1$`Time Between Arrivals`, "exp")    ## note: it is "norm" not "normal"
plot(FIT)
FIT1 <- fitdist(data1$`Time Between Arrivals`, "exp")    ## note: it is "norm" not "normal"
plot(FIT)
summary(FIT1)
FIT <- fitdist(data$`Service Time`, "norm")    ## note: it is "norm" not "normal"
plot(FIT)
summary(FIT)
FIT1 <- fitdist(data1$`Time Between Arrivals`, "exp")    ## note: it is "norm" not "normal"
plot(FIT1)
summary(FIT1)
library(tidyverse)
data <- read_csv("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS3060/Second Half/data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read_csv("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS3060/Second Half/data.csv")
library(fitdistrplus)
fit_n  <- fitdist(data$`Service Time`, "norm")
fit_g  <- fitdist(data$`Service Time`, "gamma")
fit_ln <- fitdist(data$`Service Time`, "lnorm")
summary(fit_ln)
par(mfrow=c(2,2))
plot.legend <- c("Normal", "lognormal", "gamma")
denscomp(list(fit_n, fit_g, fit_ln), legendtext = plot.legend)
cdfcomp (list(fit_n, fit_g, fit_ln), legendtext = plot.legend)
qqcomp  (list(fit_n, fit_g, fit_ln), legendtext = plot.legend)
ppcomp  (list(fit_n, fit_g, fit_ln), legendtext = plot.legend)
FIT <- fitdist(data$`Service Time`, "norm")    ## note: it is "norm" not "normal"
plot(FIT)
summary(FIT)
library(ggpubr)
shapiro.test(data$`Service Time`)
data1 <- data %>%
filter(!is.na(`Time Between Arrivals`))
fit_1  <- fitdist(data1$`Time Between Arrivals`, "norm")
fit_2  <- fitdist(data1$`Time Between Arrivals`/10, "exp")
summary(fit_ln)
FIT1 <- fitdist(data1$`Time Between Arrivals`, "exp")    ## note: it is "norm" not "normal"
plot(FIT1)
summary(FIT1)
FIT2 <- fitdist(data1$`Inter-Service Time`, "exp")    ## note: it is "norm" not "normal"
plot(FIT2)
summary(FIT2)
FIT2 <- fitdist(data1$`Inter-Service Time`, "exp")    ## note: it is "norm" not "normal"
plot(FIT2)
summary(FIT2)
knitr::opts_chunk$set(echo = TRUE)
# loading packages
library(tidyverse)
library(psych)
library(ggplot2)
# specifying files and directories
dir_trains <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 1/Data/TrainData"
dir_source <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 1/"
# loading functions from scripts
source(paste0(dir_source, "AccidentInput.R"))
source(paste0(dir_source, "SPM_Panel.R"))
fnames_trains <- list.files(dir_trains, pattern = ".csv", full.names = TRUE)
acts <- lapply(fnames_trains, read.csv)
comvar <- intersect(colnames(acts[[1]]), colnames(acts[[8]]))
totacts <- combine.data(acts, comvar)
totacts <- tibble(totacts)
# What best describes the source of the train accident data?
# observations
# What is the difference between observational data and experimental data?
# In experimental data, we control the values of the experimental variables and observe how other variables change in response, but in observational data we do not control any of the variables.
# A summary of the rail accident data with the total damages, total injuries, and total deaths across all accidents each year would be an example of what kind of time indexed data?
# all of the above: longitudinal, cross sectional, time series
# In the train accident data ACCDMG uses what kind of measurement scale?
# ratio - there is an absolute zero
# In the train accident data CAUSE uses what kind of measurement scale?
# categorical - not quantitative, no implied hierarchy
# What data scale is the reported accident temperature?
# interval - there are positive and negative values
# What parameter is chosen by an algorithm in the automatic generation of histograms?
# bin width
# Plot the histogram of HIGHSPD for all accidents. Which of these statements best describes what you observe?
ggplot(as.data.frame(totacts), aes(HIGHSPD)) +
geom_histogram() +
ggtitle("Highest Reported Accident Speed") +
labs(x = "speed (mph)", y = "Frequency")
# Generate box plots of EQPDMG for all years starting in 2001. Which statement(s) are correct? (hint: use ggplot box plot)
ggplot(as.data.frame(totacts), aes(EQPDMG)) +
geom_boxplot() +
ggtitle("Total Reportable Equipment Damage, 2001-2022") +
coord_flip() +
facet_wrap(~YEAR)
# Generate box plots of TOTKLD for accidents for all years from 2001. Which best describes what you observe?
ggplot(as.data.frame(totacts), aes(TOTKLD)) +
geom_boxplot() +
ggtitle("Total People Killed in Accidents, 2001-2022") +
coord_flip() +
facet_wrap(~YEAR)
# Generate box plots of TRKDMG for accidents for all years from 2001. Which best describes what you observe?
ggplot(as.data.frame(totacts), aes(TRKDMG)) +
geom_boxplot() +
coord_flip() +
facet_wrap(~YEAR)
# Generate box plots of TOTINJ for accidents for all years from 2001. Which best describes what you observe?
ggplot(as.data.frame(totacts), aes(TOTINJ)) +
geom_boxplot() +
coord_flip() +
facet_wrap(~YEAR)
# What is the incident number (INCDTNO) of the accident with the most injuries over all years?
totacts %>%
select(INCDTNO, IYR3, TOTINJ) %>%
arrange(desc(TOTINJ)) %>%
head()
# Generate box plots of CARSDMG for accidents for all years from 2001. Which best describes what you observe?
ggplot(as.data.frame(totacts), aes(CARSDMG)) +
geom_boxplot() +
coord_flip() +
facet_wrap(~YEAR)
totacts %>% select(IYR3, CARSDMG) %>%
filter(IYR3 %in% c(9,12)) %>%
arrange(desc(CARSDMG)) %>% head()
# What best describes what you observe in the histogram for TEMP for all the accidents from 2001 to the present. Use nclass.Sturges to choose breaks. It will be easier to see if you use fill=NA, colour='steelblue'.
ggplot(as.data.frame(totacts), aes(TEMP)) +
geom_histogram(fill=NA, colour = 'steelblue',
bins = nclass.Sturges(totacts$TEMP))
#What is the correlation between TRKDMG and ACCDMG in 2 significant digits written as 0.xx
cor(totacts$TRKDMG, totacts$ACCDMG)
pairs.panels(totacts[,c("TRKDMG", "EQPDMG", "ACCDMG", "TOTINJ", "TOTKLD")])
totacts %>%
select(TOTINJ) %>% arrange(desc(TOTINJ)) %>% head()
totacts %>% select(YEAR, TYPE, ACCDMG) %>%
filter(ACCDMG > 1500000) %>% arrange(desc(ACCDMG))
# one or more deaths
totacts %>% select(YEAR, TYPE, TOTKLD) %>%
filter(TOTKLD >= 1) %>% arrange(desc(TOTKLD))
ggplot(as.data.frame(table(totacts$TYPE)), aes(x = Var1, y= Freq)) +
geom_bar(stat="identity",fill= "steelblue")+
ggtitle("Accident Frequency by Type") +
labs(x = "Type of Accident")+
theme(axis.text.x = element_text(size = 8,  angle = 45))
main_cause<- totacts %>%
group_by(CAUSE) %>%
count() %>% arrange(desc(n)) %>% head(5)
ggplot(main_cause, aes(x = CAUSE, y=n)) +
geom_col(fill= "steelblue")+
ggtitle("Accident Frequency by Cause") +
labs(x = "Type of Cause")+
theme(axis.text.x = element_text(size = 8,  angle = 45))
getwd()
setwd(dir_source)
getwd()
rm()
ls()
rm()
# loading packages
library(tidyverse)
library(psych)
library(ggplot2)
# specifying files and directories
dir_trains <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 1/Data/TrainData"
dir_source <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 1/"
# loading functions from scripts
source(paste0(dir_source, "AccidentInput.R"))
source(paste0(dir_source, "SPM_Panel.R"))
fnames_trains <- list.files(dir_trains, pattern = ".csv", full.names = TRUE)
acts <- lapply(fnames_trains, read.csv)
comvar <- intersect(colnames(acts[[1]]), colnames(acts[[8]]))
totacts <- combine.data(acts, comvar)
totacts <- tibble(totacts)
getwd()
# What best describes the source of the train accident data?
# observations
# What is the difference between observational data and experimental data?
# In experimental data, we control the values of the experimental variables and observe how other variables change in response, but in observational data we do not control any of the variables.
# A summary of the rail accident data with the total damages, total injuries, and total deaths across all accidents each year would be an example of what kind of time indexed data?
# all of the above: longitudinal, cross sectional, time series
# In the train accident data ACCDMG uses what kind of measurement scale?
# ratio - there is an absolute zero
# In the train accident data CAUSE uses what kind of measurement scale?
# categorical - not quantitative, no implied hierarchy
# What data scale is the reported accident temperature?
# interval - there are positive and negative values
# What parameter is chosen by an algorithm in the automatic generation of histograms?
# bin width
# Plot the histogram of HIGHSPD for all accidents. Which of these statements best describes what you observe?
ggplot(as.data.frame(totacts), aes(HIGHSPD)) +
geom_histogram() +
ggtitle("Highest Reported Accident Speed") +
labs(x = "speed (mph)", y = "Frequency")
# Generate box plots of EQPDMG for all years starting in 2001. Which statement(s) are correct? (hint: use ggplot box plot)
ggplot(as.data.frame(totacts), aes(EQPDMG)) +
geom_boxplot() +
ggtitle("Total Reportable Equipment Damage, 2001-2022") +
coord_flip() +
facet_wrap(~YEAR)
# Generate box plots of TOTKLD for accidents for all years from 2001. Which best describes what you observe?
ggplot(as.data.frame(totacts), aes(TOTKLD)) +
geom_boxplot() +
ggtitle("Total People Killed in Accidents, 2001-2022") +
coord_flip() +
facet_wrap(~YEAR)
# Generate box plots of TRKDMG for accidents for all years from 2001. Which best describes what you observe?
ggplot(as.data.frame(totacts), aes(TRKDMG)) +
geom_boxplot() +
coord_flip() +
facet_wrap(~YEAR)
# Generate box plots of TOTINJ for accidents for all years from 2001. Which best describes what you observe?
ggplot(as.data.frame(totacts), aes(TOTINJ)) +
geom_boxplot() +
coord_flip() +
facet_wrap(~YEAR)
# What is the incident number (INCDTNO) of the accident with the most injuries over all years?
totacts %>%
select(INCDTNO, IYR3, TOTINJ) %>%
arrange(desc(TOTINJ)) %>%
head()
# Generate box plots of CARSDMG for accidents for all years from 2001. Which best describes what you observe?
ggplot(as.data.frame(totacts), aes(CARSDMG)) +
geom_boxplot() +
coord_flip() +
facet_wrap(~YEAR)
totacts %>% select(IYR3, CARSDMG) %>%
filter(IYR3 %in% c(9,12)) %>%
arrange(desc(CARSDMG)) %>% head()
# What best describes what you observe in the histogram for TEMP for all the accidents from 2001 to the present. Use nclass.Sturges to choose breaks. It will be easier to see if you use fill=NA, colour='steelblue'.
ggplot(as.data.frame(totacts), aes(TEMP)) +
geom_histogram(fill=NA, colour = 'steelblue',
bins = nclass.Sturges(totacts$TEMP))
#What is the correlation between TRKDMG and ACCDMG in 2 significant digits written as 0.xx
cor(totacts$TRKDMG, totacts$ACCDMG)
pairs.panels(totacts[,c("TRKDMG", "EQPDMG", "ACCDMG", "TOTINJ", "TOTKLD")])
totacts %>%
select(TOTINJ) %>% arrange(desc(TOTINJ)) %>% head()
totacts %>% select(YEAR, TYPE, ACCDMG) %>%
filter(ACCDMG > 1500000) %>% arrange(desc(ACCDMG))
# one or more deaths
totacts %>% select(YEAR, TYPE, TOTKLD) %>%
filter(TOTKLD >= 1) %>% arrange(desc(TOTKLD))
ggplot(as.data.frame(table(totacts$TYPE)), aes(x = Var1, y= Freq)) +
geom_bar(stat="identity",fill= "steelblue")+
ggtitle("Accident Frequency by Type") +
labs(x = "Type of Accident")+
theme(axis.text.x = element_text(size = 8,  angle = 45))
main_cause<- totacts %>%
group_by(CAUSE) %>%
count() %>% arrange(desc(n)) %>% head(5)
ggplot(main_cause, aes(x = CAUSE, y=n)) +
geom_col(fill= "steelblue")+
ggtitle("Accident Frequency by Cause") +
labs(x = "Type of Cause")+
theme(axis.text.x = element_text(size = 8,  angle = 45))
