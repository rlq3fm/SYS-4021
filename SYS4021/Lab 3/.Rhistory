getwd()
knitr::opts_chunk$set(echo = TRUE)
library(psych)
setwd("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/")
# read in data
housing <- read.csv("housing.csv")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(psych)
library(ggplot2)
setwd("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/")
# read in data
housing <- read.csv("housing.csv")
View(housing)
ggplot(data=housing, aes(x=price)) + geom_boxplot()
summary(housing$price)
pairs.panels(totacts[,c("sqft", "City", "bedrooms", "baths", "price")])
pairs.panels(housing[,c("sqft", "City", "bedrooms", "baths", "price")])
library(psych)
library(ggplot2)
library(GGally)
library(devtools)
library(ggfortify)
# Y = B0 + B1X1 + B2X2 + B3X3
# X1 = sqft
# X2 = bedrooms
# X3 = baths
house.main<-lm(price~sqft+bedrooms+baths, data=housing)
summary(house.main)
# Y = B0 + B1X1 + B2X2 + B3X3
# X1 = sqft
# X2 = bedrooms
# X3 = baths
house.main<-lm(price~sqft+bedrooms+baths, data=housing)
summary(house.main)
coef(house.main)
house.inter<-lm(price~(sqft+bedrooms+baths)^2, data=housing)
summary(house.inter)
anova(house.main=house.inter)
anova(house.main,house.inter)
# house.main adjusted-R2:
summary(house.main)$adj.r.squared
# house.inter adjusted-R2:
summary(house.inter)$adj.r.squared
# house.main AIC:
aic(house.main)
# house.inter AIC:
AIC(house.inter)
# house.main adjusted-R2:
summary(house.main)$adj.r.squared
# house.inter adjusted-R2:
summary(house.inter)$adj.r.squared
# house.main AIC:
AIC(house.main)
# house.inter AIC:
AIC(house.inter)
autoplot(house.main, which=4, ncol = 1, label.size = 3) + theme_bw()
cooks <- cooks.distance(house.main)
cooks[(cooks > 0.4)]
cooks <- cooks.distance(house.main)
cooks[(cooks > 0.5)]
par(mfrow = c(2, 2))
plot(house.main)
boxcox(house.main)
gg_boxcox(house.main)
boxcox(house.main, plotit=T, lambda=seq(-2,2,by=0.5))
library(psych)
library(ggplot2)
library(GGally)
library(devtools)
library(ggfortify)
library(here)
library(dplyr)
library(ggpubr)
library(MASS)
library(lindia)
setwd("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/")
# read in data
housing <- read.csv("housing.csv")
boxcox(house.main)
boxcox(house.main)
boxcox(accdmg.lm1, plotit = F)$x[which.max(boxcox(accdmg.lm1, plotit = F)$y)]
boxcox(house.main, plotit = F)$x[which.max(boxcox(house.main, plotit = F)$y)]
boxcox(house.main)
boxcox(house.main, plotit = F)$x[which.max(boxcox(house.main, plotit = F)$y)]
table(housing$City)
n_distinct(housing$City)
house.main.cor <- princomp(housing[,c("price","sqft","bedrooms","baths")], cor = T)
house.main.cor$loadings
source("PCAplots.R")
cumsum <- cumplot(house.main.cor)
cumsum$plot
biplot(house.main.cor, main="Biplot with Correlation Matrix")
house.main.cor <- princomp(housing[,c("price","sqft","bedrooms","baths","City")], cor = T)
house.main.cor <- princomp(housing[,c("price","sqft","bedrooms","baths")], cor = T)
house.main.cor$loadings
knitr::opts_chunk$set(echo = TRUE)
# Loading packages and files
traindir <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/In Class/Data/Train Data"
sourcedir <-"C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 3"
# load data
setwd(sourcedir)
source("AccidentInput.R")
# load libraries
library(ggplot2)
library(GGally)
library(devtools)
library(psych)
library(ggfortify)
acts <- file.inputl(traindir)
totacts <- combine.data(acts)
# Build a data frame with only extreme accidents for ACCDMG
dmgbox <-boxplot(totacts$ACCDMG)
# accidents above upper whisker
xdmg <- totacts[totacts$ACCDMG > dmgbox$stats[5],]
#remove 9/11
xdmg <- xdmg[-183,]
## Remove duplicates from xdmg and call new data frame xdmgnd
xdmgnd <- xdmg[!(duplicated(xdmg[, c("INCDTNO", "YEAR", "MONTH", "DAY", "TIMEHR", "TIMEMIN")])),]
accdmg.lm1<-lm(ACCDMG~TEMP+TRNSPD+CARS+HEADEND1, data=xdmgnd)
summary(accdmg.lm1)
# A and D are true
coef(accdmg.lm1)
# B0 = 479947.6141
# BTRSNPD = 18017.3925
# F-statistic: 136.2 on 4 and 7596 DF,  p-value: < 2.2e-16
par(mfrow = c(2, 2))
plot(accdmg.lm1)
cooks <- cooks.distance(accdmg.lm1)
cooks[(cooks > 0.4)]
autoplot(accdmg.lm1, which=4, ncol = 1, label.size = 3) + theme_bw()
library(dplyr)
totacts %>% slice(47965:47965) %>% select(TYPE, TOTINJ, ACCDMG)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
# Loading packages and files
traindir <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/In Class/Data/Train Data"
sourcedir <-"C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 3"
# load data
setwd(sourcedir)
source("AccidentInput.R")
# load libraries
library(ggplot2)
library(GGally)
library(devtools)
library(psych)
library(ggfortify)
acts <- file.inputl(traindir)
totacts <- combine.data(acts)
# Build a data frame with only extreme accidents for ACCDMG
dmgbox <-boxplot(totacts$ACCDMG)
# accidents above upper whisker
xdmg <- totacts[totacts$ACCDMG > dmgbox$stats[5],]
#remove 9/11
xdmg <- xdmg[-183,]
## Remove duplicates from xdmg and call new data frame xdmgnd
xdmgnd <- xdmg[!(duplicated(xdmg[, c("INCDTNO", "YEAR", "MONTH", "DAY", "TIMEHR", "TIMEMIN")])),]
accdmg.lm1<-lm(ACCDMG~TEMP+TRNSPD+CARS+HEADEND1, data=xdmgnd)
summary(accdmg.lm1)
# A and D are true
coef(accdmg.lm1)
# B0 = 479947.6141
# BTRSNPD = 18017.3925
# F-statistic: 136.2 on 4 and 7596 DF,  p-value: < 2.2e-16
par(mfrow = c(2, 2))
plot(accdmg.lm1)
cooks <- cooks.distance(accdmg.lm1)
cooks[(cooks > 0.4)]
totacts[47965,]
autoplot(accdmg.lm1, which=4, ncol = 1, label.size = 3) + theme_bw()
totacts[47965,]
# type 1 = Derailment
autoplot(accdmg.lm1,which=1, ncol = 1, label.size = 3) + theme_bw()
#Residual vs. Fitted
autoplot(accdmg.lm1,which=2, ncol = 1, label.size = 3) + theme_bw() #QQ
library(MASS)
boxcox(accdmg.lm1)
# best lambda value
boxcox(accdmg.lm1, plotit = F)$x[which.max(boxcox(accdmg.lm1, plotit = F)$y)]
max(boxcox(accdmg.lm1, plotit = F)$y)
##The best lambda and store in L
L<-boxcox(accdmg.lm1, plotit = F)$x[which.max(boxcox(accdmg.lm1, plotit = F)$y)]
##The model with the best lamda transformation
accdmg.lm1.trans<-lm((ACCDMG^L-1)/L~TEMP+TRNSPD+CARS+HEADEND1,data=xdmgnd)
# diagnostic plots
par(mfrow = c(2, 2))
plot(accdmg.lm1.trans)
max(cooks.distance(accdmg.lm1.trans))
# C
# 12 dummy variables (+ 1 base case)
# Convert Type to a factor and give more meaningful labels
xdmgnd$Type <- factor(xdmgnd$TYPE, labels = c("Derailment", "HeadOn", "Rearend", "Side", "Raking", "BrokenTrain", "Hwy-Rail", "GradeX", "Obstruction", "Explosive", "Fire","Other","SeeNarrative"))
# now that Type is a factor, build LM:
accdmg.lm2<-lm(ACCDMG~Type,data=xdmgnd)
summary(accdmg.lm2)
# derailment; based on alphabetic order
# Create Derail variable
Derail <- rep(0, nrow(xdmgnd))
Derail[which(xdmgnd$Type == "Derailment")] <- 1
Derail <- as.factor(Derail)
accdmg.lm3<-lm(ACCDMG~Derail,data=xdmgnd)
summary(accdmg.lm3)
accdmg.lm4<-lm(ACCDMG~(Derail+TRNSPD+TONS+CARS+HEADEND1)^2,data=xdmgnd)
accdmg.lm4.step <- step(accdmg.lm4)
anova(accdmg.lm4,accdmg.lm4.step)
AIC(accdmg.lm4)
AIC(accdmg.lm4.step) # better
BIC(accdmg.lm4)
BIC(accdmg.lm4.step) # better
# binary variables
Speed <- cut(xdmgnd$TRNSPD, c(min(xdmgnd$TRNSPD),median(xdmgnd$TRNSPD),max(xdmgnd$TRNSPD)), include.lowest = T, labels = c("low speed", "high speed"))
Cars <- cut(xdmgnd$CARS, c(min(xdmgnd$CARS),1,max(xdmgnd$CARS)), include.lowest = T, right=F,labels = c("low hzd", "high hzd"))
# freight
# Type of train
xdmgnd$TYPEQ <- as.numeric(xdmgnd$TYPEQ)
# Now convert to factor with meaningful labels
xdmgnd$TYPEQ <- factor(xdmgnd$TYPEQ, labels = c("Freight", "Passenger", "Commuter", "Work",  "Single", "CutofCars", "Yard", "Light", "Maint"))
Freight <- rep(0, nrow(xdmgnd))
Freight[which(xdmgnd$TYPEQ == "Freight")] <- 1
Freight <- as.factor(Freight)
# speed and cars
interaction.plot(Speed, Cars, log(xdmgnd$ACCDMG))
# Plot interaction between speed and freight
interaction.plot(Speed, Freight, log(xdmgnd$ACCDMG))
# speed and derail
interaction.plot(Speed, Derail, log(xdmgnd$ACCDMG))
# derailment; based on alphabetic order
contrast(accdmg.lm2)
# derailment; based on alphabetic order
contrasts(accdmg.lm2)
# derailment; based on alphabetic order
contrasts(Cause)
# derailment; based on alphabetic order
contrasts(Type)
# 12 dummy variables (+ 1 base case)
# Convert Type to a factor and give more meaningful labels
xdmgnd$Type <- factor(xdmgnd$TYPE, labels = c("Derailment", "HeadOn", "Rearend", "Side", "Raking", "BrokenTrain", "Hwy-Rail", "GradeX", "Obstruction", "Explosive", "Fire","Other","SeeNarrative"))
# now that Type is a factor, build LM:
accdmg.lm2<-lm(ACCDMG~Type,data=xdmgnd)
summary(accdmg.lm2)
# derailment; based on alphabetic order
contrasts(xdmgnd$Type)
rm(list = ls())
library(psych)
library(ggplot2)
library(GGally)
library(devtools)
library(ggfortify)
library(here)
library(dplyr)
library(ggpubr)
library(MASS)
library(lindia)
setwd("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/")
# read in data
housing <- read.csv("housing.csv")
ggplot(data=housing, aes(x=price)) + geom_boxplot()
# no outliers
summary(housing$price)
# upper whisker is max, so 1250000
boxplot.stats(housing$price)
summary(housing$price)
summary(housing$price)
boxplot.stats(housing$price)
# upper whisker is max, so 1250000
autoplot(house.main, which=1, ncol = 1, label.size = 3) + theme_bw()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(psych)
library(ggplot2)
library(GGally)
library(devtools)
library(ggfortify)
library(here)
library(dplyr)
library(ggpubr)
library(MASS)
library(lindia)
setwd("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/")
# read in data
housing <- read.csv("housing.csv")
ggplot(data=housing, aes(x=price)) + geom_boxplot()
# no outliers
summary(housing$price)
boxplot.stats(housing$price)
# upper whisker is max, so 1250000
pairs.panels(housing[,c("sqft", "City", "bedrooms", "baths", "price")])
# strongest correlation is 0.65
# price and sqft
# Y = B0 + B1X1 + B2X2 + B3X3
# X1 = sqft
# X2 = bedrooms
# X3 = baths
house.main<-lm(price~sqft+bedrooms+baths, data=housing)
summary(house.main)
coef(house.main)
# B sqft = 221.378 -> $221.378 change in price
house.inter<-lm(price~(sqft+bedrooms+baths)^2, data=housing)
summary(house.inter)
anova(house.main,house.inter)
# house.main adjusted-R2:
summary(house.main)$adj.r.squared
# house.inter adjusted-R2:
summary(house.inter)$adj.r.squared
# house.main AIC:
AIC(house.main)
# house.inter AIC:
AIC(house.inter)
autoplot(house.main, which=4, ncol = 1, label.size = 3) + theme_bw()
cooks <- cooks.distance(house.main)
cooks[(cooks > 0.5)] # no points > 0.5
autoplot(house.main, which=1, ncol = 1, label.size = 3) + theme_bw()
contrasts(housing$City)
contrasts(as.factor(housing$City))
