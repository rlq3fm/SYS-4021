knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(tidyverse)
nycflights13::flights
flights
glimpse(flights)
str(flights)
view(flights)
# Number or columns
ncol(flights)
# Number or rows
nrow(flights)
# Variable names
colnames(flights)
?flights
str(flights)
glimpse(flights)
ggplot(flights, aes(dep_delay)) + geom_histogram(binwidth = 20) + xlim(-10,500)
ggplot(flights, aes(dep_delay)) + geom_density()
ggplot(flights, aes(dep_delay)) + geom_freqpoly()
ggplot(flights, aes(air_time)) + geom_area(stat="bin")
ggplot(flights, aes(hour)) + geom_histogram(binwidth = 1)
ggplot(flights, aes(arr_delay)) + geom_histogram(binwidth = 10)
range(flights$arr_delay, na.rm=1)
# To zoom in
ggplot(flights, aes(arr_delay)) + geom_histogram(binwidth = 10) + xlim(-60,100)
ggplot(flights, aes(sched_dep_time,)) + geom_bar()
ggplot(flights, aes(dep_time)) + geom_bar()
ggplot(flights, aes(sched_arr_time,)) + geom_bar()
ggplot(flights, aes(arr_time)) + geom_bar()
ggplot(flights, aes(origin)) + geom_bar()
ggplot(flights, aes(carrier)) + geom_bar()
ggplot(flights, aes(dep_delay, arr_delay)) + geom_point()  + geom_line() + geom_smooth()
ggplot(flights, aes(carrier, dep_delay)) + geom_col()
ggplot(flights, aes(carrier, dep_delay)) + geom_boxplot() + ylim (0, 1000)
# Not a good choice here
#ggplot(flights, aes(carrier, dep_delay)) + geom_violin()
flights %>%
filter(dest == 'ORD')
flights %>%
filter(carrier == 'UA', dest == 'ORD')
flights %>%
filter(carrier == 'UA', dep_time > 2000, dest == 'ORD')
flights %>%
filter(dest == 'DCA' | dest == 'IAD')
flights %>%
filter(month == 7)
flights %>%
filter(dest == 'IAH' | dest == 'HOU')
flights %>%
filter(month == 7 & (dest == 'IAH' | dest == 'HOU'))
flights %>%
filter(dest == 'HOU' | origin == 'JFK')
flights %>%
filter(dep_delay > 120)
flights %>%
filter(arr_delay > 120 & dep_delay <= 0)
flights %>%
filter(arr_time < dep_time)
flights %>%
arrange(desc(dep_delay))
flights %>%
arrange(dep_delay)
flights %>%
arrange(desc(speed))
# speed not a part of dataset
# create speed variable: air_time / distance
flights %>%
mutate(speed = air_time / distance) %>%
filter(desc(speed))
# speed not a part of dataset
# create speed variable: air_time / distance
flights %>%
mutate(speed <- air_time / distance) %>%
filter(desc(speed))
# speed not a part of dataset
# create speed variable: air_time / distance
flights %>%
mutate(flights, speed = air_time / distance) %>%
filter(desc(speed))
# speed not a part of dataset
# create speed variable: air_time / distance
mutate(flights, speed = air_time / distance)
flights %>%
filter(desc(speed))
# speed not a part of dataset
# create speed variable: air_time / distance
flights_speed <- mutate(flights, speed = air_time / distance)
flights_speed %>%
filter(desc(speed))
# speed not a part of dataset
# create speed variable: air_time / distance
flights_speed <- mutate(flights, speed = air_time / distance)
flights_speed %>%
arrange(desc(speed))
# speed not a part of dataset
# create speed variable: air_time / distance
flights_speed <- mutate(flights, speed = distance / air_time)
flights_speed %>%
arrange(desc(speed))
flights %>%
arrange(dest, desc(arr_delay))
delayed_flights <- mutate(flights, dep_delay > 60)
delayed_flights
delayed_flights <- mutate(flights, dep_delay = dep_delay > 60)
delayed_flights
delayed_flights <- mutate(flights, dep_delay > 60)
delayed_flights
delayed_flights <- mutate(flights, delay = dep_delay > 60)
delayed_flights
delayed_flights <- mutate(flights, dep_delay > 60)
delayed_flights <- flights %>%
filter(dep_delay > 60) %>%
select(flights, dep_delay, arr_delay, origin, dest, air_time, distance)
delayed_flights <- flights %>%
filter(dep_delay > 60) %>%
select(dep_delay, arr_delay, origin, dest, air_time, distance)
delayed_flights <- flights %>%
filter(dep_delay > 60) %>%
select(dep_delay, arr_delay, origin, dest, air_time, distance)
delayed_flights
mutate(delayed_flights, z = (dep_delay - mean(dep_delay)) / sd(dep_delay))
mutate(delayed_flights, z = (dep_delay - mean(dep_delay)) / sd(dep_delay), is.na(TRUE))
mutate(delayed_flights, z = (dep_delay - mean(dep_delay)) / sd(dep_delay))
mutate(delayed_flights, dep_delay_hrs = dep_delay / 60, arr_delay_hrs = arr_delay / 60)
mutate(delayed_flights, dep_delay / 60, arr_delay / 60)
mutate(delayed_flights, dep_delay_hrs = dep_delay / 60, arr_delay_hrs = arr_delay / 60)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("~/Desktop/SYS2202/Midterm")
library(tidyverse)
#setwd("~/Desktop/SYS2202/Midterm")
videogames <- read_csv("video_game_sale.csv")
View(videogames)
library(tidyverse)
setwd("~\Desktop\SYS2202\Midterm")
library(tidyverse)
videogames <- read_csv("video_game_sale.csv")
library(tidyverse)
getwd()
videogames <- read_csv("video_game_sale.csv")
library(tidyverse)
setwd("C:/Users/Student/OneDrive - University of Virginia/Desktop/SYS2202/Midterm")
videogames <- read_csv("video_game_sale.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nycflights13)
flights %>%
group_by(dep_time, arr_time) %>%
summarize(count = n()) %>%
arrange(desc(count))
library(tidyverse)
library(nycflights13)
flights %>%
group_by(dep_time) %>%
summarize(count = n()) %>%
arrange(desc(count))
library(tidyverse)
library(nycflights13)
flights %>%
group_by(dep_time) %>%
summarize(count = n()) %>%
arrange(desc(count))
ggplot(flights, aes(dep_time)) +
geom_histogram()
library(tidyverse)
library(nycflights13)
flights %>%
group_by(dep_time) %>%
summarize(count = n()) %>%
arrange(desc(count))
ggplot(flights, aes(dep_time)) +
geom_histogram(bw = 10)
library(tidyverse)
library(nycflights13)
flights %>%
group_by(dep_time) %>%
summarize(count = n()) %>%
arrange(desc(count))
ggplot(flights, aes(dep_time)) +
geom_histogram(bw = 20)
library(tidyverse)
library(nycflights13)
flights %>%
group_by(dep_time) %>%
summarize(count = n()) %>%
arrange(desc(count))
ggplot(flights, aes(dep_time)) +
geom_histogram(bw = 5)
library(tidyverse)
library(nycflights13)
flights %>%
group_by(dep_time) %>%
summarize(count = n()) %>%
arrange(desc(count))
ggplot(flights, aes(dep_time)) +
geom_histogram(bw = 20)
flights %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
busy_routes
busy_routes <- flights %>%
#select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
select(origin, dest, dep_delay)
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
busy_routes
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
busy_routes
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_routes)
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
mutate(dep_delay = flights$dep_delay)
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
add_column(dep_delay = flights$dep_delay)
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
add_column(dep_delay = flights$dep_delay)
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_routes)
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_routes)
flights %>%
select(busy_routes)
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_routes)
busy_routes$delay <- flights$dep_delay
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(dep_delay, origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_routes)
busy_routes$delay <- flights$dep_delay
busy_routes <- flights %>%
select(origin, dest, dep_delay) %>%
group_by(dep_delay, origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_routes)
busy_routes <- flights %>%
select(origin, dest) %>%
group_by(dep_delay, origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
busy_routes <- flights %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_routes)
ggplot
busy_routes <- flights %>%
group_by(origin, dest) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_routes)
flights %>%
select(origin == c('JFK', 'LGA') & dest == c('LAX','ATL','ORD'))
flights %>%
select(origin == 'JFK' & dest == 'LAX')
busy_days <- flights %>%
group_by(day) %>%
summarize(count = n()) %>%
arrange(desc(count))
busy_days <- flights %>%
group_by(day) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(busy_days)
ggplot(flights, aes(x = day, y = dep_delay)) +
geom_col()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nycflights13)
#library(maps)
airports %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point() +
coord_map()
getwd()
knitr::opts_chunk$set(echo = TRUE)
# loading packages
library(lattice)
# specifying files and directories
dir_trains <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 2/Data/"
dir_source <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 2/"
# loading functions from scripts
source(paste0(dir_source, "AccidentInput.R"))
source(paste0(dir_source, "PCAplots.R"))
# create totacts dataframe
fnames_trains <- list.files(dir_trains, pattern = ".csv", full.names = TRUE)
acts <- lapply(fnames_trains, read.csv)
comvar <- intersect(colnames(acts[[1]]), colnames(acts[[8]]))
totacts <- combine.data(acts, comvar)
totacts <- tibble(totacts)
library(lattice)
library(tidyverse)
library(tidyverse)
library(psych)
library(ggplot2)
totacts <- tibble(totacts)
library(tidyverse)
tidyverse_update()
update.packages(tidyverse)
update.packages()
library(tidyverse)
getwd()
setwd("C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 2/")
getwd()
library(tidyverse)
remove.packages("tidyverse", lib="~/R/win-library/4.1")
install.packages(tidyverse)
install.packages("tidyverse")
# loading packages
library(lattice)
library(tidyverse)
install.packages("cli")
knitr::opts_chunk$set(echo = TRUE)
# loading packages
library(lattice)
# loading packages
library(lattice)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("cli")
install.packages("cli")
remove.packages("cli", lib="~/R/win-library/4.1")
install.packages("cli")
install.packages("cli")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
remove.packages("dplyr", lib="~/R/win-library/4.1")
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
# loading packages
library(lattice)
library(tidyverse)
library(ggplot2)
# specifying files and directories
dir_trains <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 2/Data/"
dir_source <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 2/"
# loading functions from scripts
source(paste0(dir_source, "AccidentInput.R"))
source(paste0(dir_source, "PCAplots.R"))
# create totacts dataframe
fnames_trains <- list.files(dir_trains, pattern = ".csv", full.names = TRUE)
acts <- lapply(fnames_trains, read.csv)
comvar <- intersect(colnames(acts[[1]]), colnames(acts[[8]]))
totacts <- combine.data(acts, comvar)
totacts <- tibble(totacts)
knitr::opts_chunk$set(echo = TRUE)
# loading packages
library(lattice)
library(tidyverse)
library(ggplot2)
# specifying files and directories
dir_trains <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 2/Data/"
dir_source <- "C:/Users/Student/OneDrive - University of Virginia/Documents/SYS4021/Lab 2/"
# loading functions from scripts
source(paste0(dir_source, "AccidentInput.R"))
source(paste0(dir_source, "PCAplots.R"))
# create totacts dataframe
fnames_trains <- list.files(dir_trains, pattern = ".csv", full.names = TRUE)
acts <- lapply(fnames_trains, read.csv)
comvar <- intersect(colnames(acts[[1]]), colnames(acts[[8]]))
totacts <- combine.data(acts, comvar)
totacts <- tibble(totacts)
# add casualty
totacts2 <- totacts %>%
mutate(casualty = TOTINJ + TOTKLD)
View(totacts2)
# Question 9
ggplot(as.data.frame(totacts2), aes(casualty)) +
geom_boxplot() +
ggtitle("Total Casualties") +
coord_flip()
# Question 10
totacts2 %>%
filter(casualty > 0) %>%
summarize(count())
# Question 10
totacts2 %>%
filter(casualty > 0)
# Question 10
totacts2 %>%
select(casualty)
filter(casualty > 0)
# Question 10
totacts2 %>%
select(casualty)%>%
filter(casualty > 0)
# Question 10
# 3814 rows out of 65465 -> 0.05826
totacts2 %>%
select(casualty)%>%
filter(casualty > 0) %>%
count()
# Question 10
# 3814 rows out of 65465 -> 0.05826
totacts2 %>%
select(casualty)%>%
#filter(casualty > 0) %>%
count(casualty)
# Question 10
# 3814 rows out of 65465 -> 0.05826
totacts2 %>%
select(casualty)%>%
#filter(casualty > 0) %>%
count(n)
# Question 10
# 3814 rows out of 65465 -> 0.05826
totacts2 %>%
select(casualty)%>%
filter(casualty > 0)
# Question 10
# 3814 rows out of 65465 -> 0.05826
str(totacts2 %>%
select(casualty)%>%
filter(casualty > 0))
totacts_posCas <- totacts2 %>% filter(casualty > 0)
